<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.derhede.taoke.dao.TaoKeFavoritesMapper">
  <resultMap id="BaseResultMap" type="com.derhede.taoke.dto.TaoKeFavorites">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, update_time, version, group_id, group_name, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from taoke_favorites
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAllValidFavorites" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from taoke_favorites
    where state = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from taoke_favorites
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.derhede.taoke.dto.TaoKeFavorites">
    insert into taoke_favorites (id, create_time, update_time, 
      version, group_id, group_name, 
      state)
    values ((select replace(uuid(),'-','') from dual), (now()), (now()),
      0,, #{groupId,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR},
      #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.derhede.taoke.dto.TaoKeFavorites">
    insert into taoke_favorites
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.derhede.taoke.dto.TaoKeFavorites">
    update taoke_favorites
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.derhede.taoke.dto.TaoKeFavorites">
    update taoke_favorites
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>